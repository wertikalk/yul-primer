{"abi":[{"type":"function","name":"exec","inputs":[{"name":"_op","type":"uint256","internalType":"uint256"},{"name":"_loc0","type":"uint256","internalType":"uint256"},{"name":"_loc1","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"read","inputs":[{"name":"_loc","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"write","inputs":[{"name":"_loc","type":"uint256","internalType":"uint256"},{"name":"_val","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"exec(uint256,uint256,uint256)":"9273ad4e","read(uint256)":"ed2e5a97","write(uint256,uint256)":"9c0e3f7a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_op\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loc0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loc1\",\"type\":\"uint256\"}],\"name\":\"exec\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loc\",\"type\":\"uint256\"}],\"name\":\"read\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"write\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exec(uint256,uint256,uint256)\":{\"details\":\"Stores the result in the first storage location\",\"params\":{\"_loc0\":\"First storage location\",\"_loc1\":\"Second storage location\",\"_op\":\"Operation ID\"},\"returns\":{\"_0\":\"Success of the applied operation\"}},\"read(uint256)\":{\"params\":{\"_loc\":\"Storage location to be read\"},\"returns\":{\"_0\":\"Value at the `loc` storage location\"}},\"write(uint256,uint256)\":{\"params\":{\"_loc\":\"Storage location to be written to\",\"_val\":\"Value to be written\"},\"returns\":{\"_0\":\"Write success status\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exec(uint256,uint256,uint256)\":{\"notice\":\"Executes specified operation on the values inside provided storage locations\"},\"read(uint256)\":{\"notice\":\"Reads the provided storage location\"},\"write(uint256,uint256)\":{\"notice\":\"Writes the provided value to the storage location\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/i/I_OStorage.sol\":\"I_OStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/i/I_OStorage.sol\":{\"keccak256\":\"0x2d4fe62e3d36184f32883a3b7b2cdb00eeef5fb0d4e42827e43e4d5a6fe2c7e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://364e14fc5b525f4cbccbbf55bcaff5c4cca8314864d3bcf093e50987a77e3fc2\",\"dweb:/ipfs/QmWHzLR7pcwnGcvTG7br4HTaN38wyA67QhEzdvn3gSpW53\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_op","type":"uint256"},{"internalType":"uint256","name":"_loc0","type":"uint256"},{"internalType":"uint256","name":"_loc1","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"exec","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_loc","type":"uint256"}],"stateMutability":"view","type":"function","name":"read","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_loc","type":"uint256"},{"internalType":"uint256","name":"_val","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"write","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"exec(uint256,uint256,uint256)":{"details":"Stores the result in the first storage location","params":{"_loc0":"First storage location","_loc1":"Second storage location","_op":"Operation ID"},"returns":{"_0":"Success of the applied operation"}},"read(uint256)":{"params":{"_loc":"Storage location to be read"},"returns":{"_0":"Value at the `loc` storage location"}},"write(uint256,uint256)":{"params":{"_loc":"Storage location to be written to","_val":"Value to be written"},"returns":{"_0":"Write success status"}}},"version":1},"userdoc":{"kind":"user","methods":{"exec(uint256,uint256,uint256)":{"notice":"Executes specified operation on the values inside provided storage locations"},"read(uint256)":{"notice":"Reads the provided storage location"},"write(uint256,uint256)":{"notice":"Writes the provided value to the storage location"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/i/I_OStorage.sol":"I_OStorage"},"evmVersion":"paris","libraries":{}},"sources":{"src/i/I_OStorage.sol":{"keccak256":"0x2d4fe62e3d36184f32883a3b7b2cdb00eeef5fb0d4e42827e43e4d5a6fe2c7e9","urls":["bzz-raw://364e14fc5b525f4cbccbbf55bcaff5c4cca8314864d3bcf093e50987a77e3fc2","dweb:/ipfs/QmWHzLR7pcwnGcvTG7br4HTaN38wyA67QhEzdvn3gSpW53"],"license":"MIT"}},"version":1},"id":24}